{"ast":null,"code":"import _classCallCheck from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jennypham/Desktop/cmpt365/assignment2/src/component/Image/Image.js\";\nimport React from 'react';\nimport classes from './Image.module.css';\nimport Aux from '../../hoc/Aux';\nimport Button from '../UI/Button/Button';\n\nvar images = require.context('../../assets/images', true);\n\nvar ImageD =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ImageD, _React$Component);\n\n  function ImageD() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageD);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageD)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      error: error,\n      info: info\n    };\n    return _this;\n  }\n\n  _createClass(ImageD, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, info) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('[Image.js]', this.props.compress);\n      var img_src = images(\"./\".concat(this.props.imagePath));\n      var compressed_img = this.props.imagePath.split('.');\n      var img_name = compressed_img[0];\n      console.log(img_name);\n      var compressed_img_src = String(img_name) + String(this.props.compress) + '.jpg';\n      console.log('this is the compressed image name', compressed_img_src);\n      var comp_img_src = images(\"./\".concat(compressed_img_src));\n      var compression_ratio = this.props.sizeBefore / this.props.sizeAfter;\n      compression_ratio.toFixed(2);\n      return React.createElement(\"div\", {\n        className: classes.Image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.imagePath), React.createElement(\"img\", {\n        width: \"350px\",\n        height: \"350px\",\n        src: img_src,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        width: \"350px\",\n        height: \"350px\",\n        src: comp_img_src,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.Filesize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"File Size Before: \", this.props.sizeBefore, \"kB\")), React.createElement(\"div\", {\n        className: classes.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"File Size After: \", this.props.sizeAfter, \"kB\")), React.createElement(\"div\", {\n        className: classes.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Quantization Scaling factor: \", this.props.compression)), React.createElement(\"div\", {\n        className: classes.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Compression Ratio: \", compression_ratio)), React.createElement(Button, {\n        btnType: \"Danger\",\n        clicked: this.props.click,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"REMOVE\")));\n    }\n  }]);\n\n  return ImageD;\n}(React.Component);\n\nexport default ImageD;","map":{"version":3,"sources":["/Users/jennypham/Desktop/cmpt365/assignment2/src/component/Image/Image.js"],"names":["React","classes","Aux","Button","images","require","context","ImageD","state","error","info","console","log","props","compress","img_src","imagePath","compressed_img","split","img_name","compressed_img_src","String","comp_img_src","compression_ratio","sizeBefore","sizeAfter","toFixed","Image","Filesize","headers","compression","click","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport classes from './Image.module.css'\nimport Aux from '../../hoc/Aux'\nimport Button from '../UI/Button/Button'\nvar images = require.context('../../assets/images', true);\n\nclass ImageD extends React.Component {\n\n    state ={\n        error:error,\n        info:info\n    }\n    componentDidCatch(error, info){\n\n    }\n    render() {\n        console.log('[Image.js]',this.props.compress)\n        let img_src = images(`./${this.props.imagePath}`)\n        let compressed_img = this.props.imagePath.split('.')\n        let img_name = compressed_img[0]\n        console.log(img_name)\n\n        let compressed_img_src = String(img_name) + String(this.props.compress) + '.jpg'\n        console.log('this is the compressed image name', compressed_img_src)\n        let comp_img_src = images(`./${compressed_img_src}`)\n        let compression_ratio = (this.props.sizeBefore/this.props.sizeAfter)\n\n        compression_ratio.toFixed(2)\n        return (\n            <div className={classes.Image}>\n                <h1>{this.props.imagePath}</h1>\n                    <img width='350px' height='350px' src={img_src} alt=\"\"/>\n                    <img width='350px' height='350px' src={comp_img_src} alt=\"\"/> \n                <div className={classes.Filesize}>\n                    <div className={classes.headers}>\n                        <h2>File Size Before: {this.props.sizeBefore}kB</h2>\n                    </div>\n                    <div className={classes.headers}>\n                        <h2>File Size After: {this.props.sizeAfter}kB</h2>\n                    </div>\n                    <div className={classes.headers}>\n                        <h2>Quantization Scaling factor: {this.props.compression}</h2>\n                    </div>\n                    <div className={classes.headers}>\n                        <h2>Compression Ratio: {compression_ratio}</h2>\n                    </div>\n                    \n                    <Button\n                    btnType='Danger'\n                    clicked={this.props.click}\n                    >REMOVE</Button>\n                </div>\n\n            </div>\n            \n        );\n    }\n}\n\nexport default ImageD;"]},"metadata":{},"sourceType":"module"}