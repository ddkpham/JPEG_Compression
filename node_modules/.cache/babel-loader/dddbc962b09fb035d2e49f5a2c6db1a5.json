{"ast":null,"code":"import _toConsumableArray from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jennypham/Desktop/cmpt365/assignment2/src/containers/ImageManager/ImageManager.js\";\nimport React, { Component } from 'react';\nimport classes from './ImageManager.module.css';\nimport Aux from '../../hoc/Aux';\nimport ImageControl from '../../component/Image/ImageControls/ImageControl';\nimport Modal from '../../component/UI/Modal/Modal';\nimport CompressProcess from '../../component/Image/CompressProcess/CompressProcess';\n\nvar ImageManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageManager, _Component);\n\n  function ImageManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      images: [{\n        id: '1',\n        filePath: 'space.jpg',\n        compression: 1,\n        sizeBefore: 56,\n        sizeAfter: 10\n      }, {\n        id: '2',\n        filePath: 'space.jpg',\n        compression: 2,\n        sizeBefore: 32,\n        sizeAfter: 20\n      }, {\n        id: '3',\n        filePath: 'hotel_spot.jpg',\n        compression: 3,\n        sizeBefore: 30,\n        sizeAfter: 20\n      }],\n      active: false,\n      indexCount: 4,\n      imageProcessing: false,\n      currentImage: \"\",\n      currentCompressVal: 1\n    };\n\n    _this.currentImageHandler = function (event) {\n      var filepath = event.target.value; //console.log('filepath',filepath);\n\n      _this.setState({\n        currentImage: filepath\n      }); //console.log('current image',this.state.currentImage);\n\n    };\n\n    _this.currentCompressValHandler = function (event) {\n      var compressVal = event.target.value;\n      console.log(compressVal);\n\n      _this.setState({\n        currentCompressVal: compressVal\n      });\n    };\n\n    _this.removeImageHandler = function (imageIndex) {\n      console.log('removing image');\n\n      var images = _toConsumableArray(_this.state.images);\n\n      images.splice(imageIndex, 1);\n\n      _this.setState({\n        images: images\n      });\n\n      console.log(_this.state.images);\n    };\n\n    _this.toggleImageModal = function () {\n      _this.setState({\n        imageProcessing: !_this.state.imageProcessing\n      });\n    };\n\n    _this.compressAndShowImage = function () {\n      //TODO: Backend request\n      //fake for now...\n      //expect to recieve 2 values fileSize Before Compression and fileSize after\n      //JSON format \n      var images = _toConsumableArray(_this.state.images);\n\n      var id = _this.state.indexCount;\n      var filePath = _this.state.currentImage;\n      var compression = _this.state.currentCompressVals;\n      var fileSizeBefore = 10;\n      var fileSizeAfter = 5;\n      images.push({\n        id: id,\n        filePath: filePath,\n        compression: compression,\n        sizeBefore: fileSizeBefore,\n        sizeAfter: fileSizeAfter\n      });\n\n      _this.setState(function (prevState, props) {\n        return {\n          images: images,\n          indexCount: prevState.indexCount + 1,\n          imageProcessing: !prevState.imageProcessing\n        };\n      });\n\n      console.log(_this.state.images);\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageManager, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.imageProcessing,\n        cancel: this.toggleImageModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CompressProcess, {\n        currentImage: this.currentImageHandler,\n        cancel: this.toggleImageModal,\n        confirm: this.compressAndShowImage,\n        currentCompress: this.currentCompressValHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.StartApp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"START OUR APPLICATION\"), React.createElement(\"button\", {\n        onClick: this.toggleImageModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"PRESS ME\")), React.createElement(ImageControl, {\n        images: this.state.images,\n        click: this.removeImageHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ImageManager;\n}(Component);\n\nexport default ImageManager;","map":{"version":3,"sources":["/Users/jennypham/Desktop/cmpt365/assignment2/src/containers/ImageManager/ImageManager.js"],"names":["React","Component","classes","Aux","ImageControl","Modal","CompressProcess","ImageManager","state","images","id","filePath","compression","sizeBefore","sizeAfter","active","indexCount","imageProcessing","currentImage","currentCompressVal","currentImageHandler","event","filepath","target","value","setState","currentCompressValHandler","compressVal","console","log","removeImageHandler","imageIndex","splice","toggleImageModal","compressAndShowImage","currentCompressVals","fileSizeBefore","fileSizeAfter","push","prevState","props","StartApp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport classes from './ImageManager.module.css';\nimport Aux from '../../hoc/Aux'\nimport ImageControl from '../../component/Image/ImageControls/ImageControl';\nimport Modal from '../../component/UI/Modal/Modal';\nimport CompressProcess from '../../component/Image/CompressProcess/CompressProcess';\nclass ImageManager extends Component{\n    state ={\n        images : [\n            {id:'1', filePath:'space.jpg', compression:1, sizeBefore:56, sizeAfter:10},\n            {id:'2', filePath:'space.jpg', compression:2, sizeBefore:32, sizeAfter:20},\n            {id:'3', filePath:'hotel_spot.jpg', compression:3, sizeBefore:30, sizeAfter:20}\n\n        ],\n        active: false,\n        indexCount:4,\n        imageProcessing:false,\n        currentImage: \"\",\n        currentCompressVal:1\n    }\n\n\n    currentImageHandler = (event)=>{\n        const filepath = event.target.value;\n        //console.log('filepath',filepath);\n        this.setState({currentImage: filepath});\n        //console.log('current image',this.state.currentImage);\n    } \n    \n    currentCompressValHandler = ( event ) =>{\n        const compressVal = event.target.value;\n        console.log(compressVal)\n        this.setState({currentCompressVal: compressVal});\n    }\n\n    removeImageHandler = ( imageIndex ) =>{\n        console.log('removing image')\n        const images = [...this.state.images];\n        images.splice(imageIndex, 1);\n        this.setState({images:images})\n        console.log(this.state.images)\n\n    }\n\n    toggleImageModal = () =>{\n        this.setState({imageProcessing: !this.state.imageProcessing})\n    }\n\n    //This will be a HTTP request for image compression later\n    //Return: FILE SIZE- Before and After \n    compressAndShowImage = () =>{\n        //TODO: Backend request\n        //fake for now...\n        //expect to recieve 2 values fileSize Before Compression and fileSize after\n        //JSON format \n        const images = [...this.state.images]\n        const id = this.state.indexCount\n        const filePath = this.state.currentImage;\n        const compression = this.state.currentCompressVals\n        const fileSizeBefore = 10;\n        const fileSizeAfter = 5;\n        images.push({id:id, filePath:filePath, compression:compression,\n            sizeBefore:fileSizeBefore, sizeAfter:fileSizeAfter});\n        \n        this.setState((prevState, props)=>{\n            return{\n                images:images,\n                indexCount:prevState.indexCount + 1,\n                imageProcessing:!prevState.imageProcessing\n            }\n        })\n        console.log(this.state.images)\n\n        \n    }\n    render(){\n        return(\n            <Aux>\n                <Modal\n                show={this.state.imageProcessing}\n                cancel={this.toggleImageModal}>\n                    <CompressProcess\n                    currentImage={this.currentImageHandler}\n                    cancel={this.toggleImageModal}\n                    confirm={this.compressAndShowImage}\n                    currentCompress={this.currentCompressValHandler}\n                    ></CompressProcess>\n                </Modal>\n                <div className={classes.StartApp}>\n                    <h1>START OUR APPLICATION</h1>\n                    <button onClick={this.toggleImageModal}>PRESS ME</button>\n                </div>\n                <ImageControl \n                images={this.state.images}\n                click={this.removeImageHandler}\n                />\n            </Aux>\n        );\n    }\n}\n\nexport default ImageManager;\n"]},"metadata":{},"sourceType":"module"}