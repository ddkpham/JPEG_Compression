{"ast":null,"code":"import _classCallCheck from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jennypham/Desktop/cmpt365/assignment2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jennypham/Desktop/cmpt365/assignment2/src/component/Image/CompressProcess/CompressProcess.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\nimport classes from './CompressProcess.module.css';\n\nvar CompressProcess =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CompressProcess, _Component);\n\n  function CompressProcess() {\n    _classCallCheck(this, CompressProcess);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CompressProcess).apply(this, arguments));\n  }\n\n  _createClass(CompressProcess, [{\n    key: \"render\",\n    value: function render() {\n      var text = null;\n\n      if (this.props.loadingImage) {\n        text = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, \"Loading Image...\");\n      } else {\n        text = React.createElement(\"div\", {\n          className: classes.Modal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Welcome\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        }, \"Select the image you would like to compress\"));\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, text, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.props.currentImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Please select Quantization value (1-10)\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.props.currentCompress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(Button, {\n        clicked: this.props.cancel,\n        btnType: \"Danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"CANCEL\"), React.createElement(Button, {\n        clicked: this.props.confirm,\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"CONTINUE\"));\n    }\n  }]);\n\n  return CompressProcess;\n}(Component);\n\nexport default CompressProcess;","map":{"version":3,"sources":["/Users/jennypham/Desktop/cmpt365/assignment2/src/component/Image/CompressProcess/CompressProcess.js"],"names":["React","Component","Aux","Button","classes","CompressProcess","text","props","loadingImage","Modal","currentImage","currentCompress","cancel","confirm"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;IACMC,e;;;;;;;;;;;;;6BACM;AACJ,UAAIC,IAAI,GAAG,IAAX;;AACA,UAAG,KAAKC,KAAL,CAAWC,YAAd,EAA2B;AACvBF,QAAAA,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,OAFD,MAGI;AACAA,QAAAA,IAAI,GACA;AAAK,UAAA,SAAS,EAAEF,OAAO,CAACK,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,CADJ;AAMH;;AACD,aACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IADL,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWG,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAJJ,EAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,MADxB;AAEI,QAAA,OAAO,EAAC,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAWI,oBAAC,MAAD;AACI,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OADxB;AAEI,QAAA,OAAO,EAAC,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,CADJ;AAkBH;;;;EAhCyBZ,S;;AAmC9B,eAAeI,eAAf","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\nimport classes from './CompressProcess.module.css'\nclass CompressProcess extends Component{\n    render(){\n        let text = null;\n        if(this.props.loadingImage){\n            text = <h1>Loading Image...</h1>\n        }\n        else{\n            text = (\n                <div className={classes.Modal}>\n                    <h3>Welcome</h3>\n                    <p>Select the image you would like to compress</p>\n                </div>\n            )\n        }\n        return(\n            <Aux>\n                {text}\n                <input type='text' onChange={this.props.currentImage}></input>\n                <br />\n                <p>Please select Quantization value (1-10)</p>\n                <input type='text' onChange={this.props.currentCompress}></input>\n                <br />\n                <Button\n                    clicked={this.props.cancel}\n                    btnType='Danger'\n                >CANCEL</Button>\n                <Button\n                    clicked={this.props.confirm}\n                    btnType='Success'\n                >CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default CompressProcess;"]},"metadata":{},"sourceType":"module"}